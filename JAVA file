package harsh;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class Transaction {
    private String description;
    private double amount;
    private String category;
    private String date;

    public Transaction(String description, double amount, String category, String date) {
        this.description = description;
        this.amount = amount;
        this.category = category;
        this.date = date;
    }

    public String getDescription() {
        return description;
    }

    public double getAmount() {
        return amount;
    }

    public String getCategory() {
        return category;
    }

    public String getDate() {
        return date;
    }
}

public class MoneyManager {
    private static ArrayList<Transaction> transactions = new ArrayList<>();
    private static Map<String, Double> spendingLimits = new HashMap<>();
    private static Map<String, Double> monthlyExpenses = new HashMap<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Money Manager Menu:");
            System.out.println("1. Add Transaction");
            System.out.println("2. View Transactions");
            System.out.println("3. Set Spending Limit");
            System.out.println("4. View Spending Limits");
            System.out.println("5. View Monthly Breakdown");
            System.out.println("6. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    addTransaction(scanner);
                    break;
                case 2:
                    viewTransactions();
                    break;
                case 3:
                    setSpendingLimit(scanner);
                    break;
                case 4:
                    viewSpendingLimits();
                    break;
                case 5:
                    viewMonthlyBreakdown();
                    break;
                case 6:
                    System.out.println("Exiting Money Manager. Goodbye!");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void addTransaction(Scanner scanner) {
        System.out.print("Enter transaction description: ");
        String description = scanner.next();

        System.out.print("Enter transaction amount: ");
        double amount = scanner.nextDouble();

        System.out.print("Enter transaction category: ");
        String category = scanner.next();

        System.out.print("Enter transaction date (YYYY-MM-DD): ");
        String date = scanner.next();

        Transaction transaction = new Transaction(description, amount, category, date);
        transactions.add(transaction);

        checkSpendingLimit(category, amount);
        updateMonthlyBreakdown(date, amount);

        System.out.println("Transaction added successfully!");
    }

    private static void viewTransactions() {
        if (transactions.isEmpty()) {
            System.out.println("No transactions recorded yet.");
        } else {
            System.out.println("Transaction List:");
            for (Transaction transaction : transactions) {
                System.out.println("Description: " + transaction.getDescription());
                System.out.println("Amount: " + transaction.getAmount());
                System.out.println("Category: " + transaction.getCategory());
                System.out.println("Date: " + transaction.getDate());
                System.out.println("---------------------------");
            }
        }
    }

    private static void setSpendingLimit(Scanner scanner) {
        System.out.print("Enter category for spending limit: ");
        String category = scanner.next();

        System.out.print("Enter spending limit for " + category + ": ");
        double limit = scanner.nextDouble();

        spendingLimits.put(category, limit);

        System.out.println("Spending limit set successfully for category: " + category);
    }

    private static void viewSpendingLimits() {
        if (spendingLimits.isEmpty()) {
            System.out.println("No spending limits set yet.");
        } else {
            System.out.println("Spending Limits:");
            for (Map.Entry<String, Double> entry : spendingLimits.entrySet()) {
                System.out.println("Category: " + entry.getKey() + ", Limit: " + entry.getValue());
            }
        }
    }

    private static void checkSpendingLimit(String category, double amount) {
        if (spendingLimits.containsKey(category) && amount > spendingLimits.get(category)) {
            System.out.println("Warning: You have exceeded the spending limit for category " + category);
        }
    }

    private static void updateMonthlyBreakdown(String date, double amount) {
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(dateFormat.parse(date));

            int year = calendar.get(Calendar.YEAR);
            int month = calendar.get(Calendar.MONTH) + 1; // Months are 0-indexed

            String key = year + "-" + month;

            if (monthlyExpenses.containsKey(key)) {
                double currentAmount = monthlyExpenses.get(key);
                monthlyExpenses.put(key, currentAmount + amount);
            } else {
                monthlyExpenses.put(key, amount);
            }
        } catch (ParseException e) {
            System.out.println("Error parsing date. Monthly breakdown not updated.");
        }
    }

    private static void viewMonthlyBreakdown() {
        if (monthlyExpenses.isEmpty()) {
            System.out.println("No monthly expenses recorded yet.");
        } else {
            System.out.println("Monthly Expense Breakdown:");
            for (Map.Entry<String, Double> entry : monthlyExpenses.entrySet()) {
                System.out.println("Month: " + entry.getKey() + ", Total Expenses: " + entry.getValue());
            }
        }
    }
}
